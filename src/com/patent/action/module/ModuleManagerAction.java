/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.patent.action.module;

import java.io.PrintWriter;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.alibaba.fastjson.JSON;
import com.patent.action.base.Transcode;
import com.patent.factory.AppFactory;
import com.patent.module.CpyUserInfo;
import com.patent.module.ModActInfoTb;
import com.patent.module.ModuleInfoTb;
import com.patent.service.CpyUserInfoManager;
import com.patent.service.ModActInfoManager;
import com.patent.service.ModuleInfoManager;
import com.patent.util.Constants;

/** 
 * MyEclipse Struts
 * Creation date: 08-07-2018
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class ModuleManagerAction extends DispatchAction {
	
	/**
	 * 获取session中的用户ID
	 * @param request
	 * @return
	 */
	private Integer getLoginUserId(HttpServletRequest request){
        Integer userId = (Integer)request.getSession(false).getAttribute(Constants.LOGIN_USER_ID);
        return userId;
	}
	
	/**
	 * 获取session中的用户角色名称
	 * @param request
	 * @return
	 */
	private String getLoginRoleName(HttpServletRequest request){
        String roleName = (String)request.getSession(false).getAttribute(Constants.LOGIN_USER_ROLE_NAME);
        return roleName;
	}
	
	/**
	 * 导向模块管理界面
	 * @description
	 * @author wm
	 * @date 2018-8-7 下午05:02:19
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward goModulePage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		return mapping.findForward("modulePage");
	}
	
	/**
	 * 获取平台所有模块
	 * @description
	 * @author wm
	 * @date 2018-8-7 下午05:03:31
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception 
	 */
	public ActionForward getModuleDetail(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		// TODO Auto-generated method stub
		ModuleInfoManager mm = (ModuleInfoManager) AppFactory.instance(null).getApp(Constants.WEB_MODULE_INFO);
		ModActInfoManager mam = (ModActInfoManager) AppFactory.instance(null).getApp(Constants.WEB_MOD_ACT_INFO);
		List<ModuleInfoTb> mList = mm.listInfoByLevel(-1);
		for(Iterator<ModuleInfoTb> it = mList.iterator() ; it.hasNext();){
			ModuleInfoTb mod = it.next();
			List<ModActInfoTb> acList = mam.listInfoByModId(mod.getId());
			for(Iterator<ModActInfoTb> it_1 = acList.iterator() ; it_1.hasNext();){
				ModActInfoTb ma = it_1.next();
			}
		}
		return null;
	}
	
	/**
	 * 增加平台模块
	 * @description
	 * @author wm
	 * @date 2018-8-7 下午05:04:00
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception 
	 */
	public ActionForward addModule(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		// TODO Auto-generated method stub
		ModuleInfoManager mm = (ModuleInfoManager) AppFactory.instance(null).getApp(Constants.WEB_MODULE_INFO);
		Map<String,String> map = new HashMap<String,String>();
		if(this.getLoginRoleName(request).equals("super")){//只有超管才能增加
			String modName = Transcode.unescape(request.getParameter("modName"), request);
			String modPic = String.valueOf(request.getParameter("modPic"));
			String resUrl = request.getParameter("resUrl");
			Integer orderNo = Integer.parseInt(request.getParameter("orderNo"));
			Integer modLevel = Integer.parseInt(request.getParameter("modLevel"));
			if(mm.listInfoByName(modName).size() > 0){
				map.put("result", "exist");
			}else{
				Integer modId = mm.addModule(modName, modPic, resUrl, orderNo, modLevel);
				if(modId > 0){
					map.put("result", "success");
				}else{
					map.put("result", "error");
				}
			}
		}else{
			map.put("result", "noAbility");
		}
		String json = JSON.toJSONString(map);
        PrintWriter pw = response.getWriter();  
        pw.write(json); 
        pw.flush();  
        pw.close();
		return null;
	}
	
	/**
	 * 增加指定模块的模块动作
	 * @author Administrator
	 * @date 2018-8-8 下午10:32:44
	 * @ModifiedBy
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward addModAct(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		// TODO Auto-generated method stub
		ModuleInfoManager mm = (ModuleInfoManager) AppFactory.instance(null).getApp(Constants.WEB_MODULE_INFO);
		ModActInfoManager mam = (ModActInfoManager) AppFactory.instance(null).getApp(Constants.WEB_MOD_ACT_INFO);
		Map<String,String> map = new HashMap<String,String>();
		if(this.getLoginRoleName(request).equals("super")){//只有超管才能增加
			Integer modId = Integer.parseInt(request.getParameter("modId"));
			String actNameChi = Transcode.unescape(request.getParameter("actNameChi"), request);
			String actNameEng = request.getParameter("actNameEng");
//			mam.
			Integer orderNo = Integer.parseInt(request.getParameter("orderNo"));
			mam.addMAct(actNameChi, actNameEng, orderNo, modId);
		}
		return null;
	}
}